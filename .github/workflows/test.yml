name: Pull request audit bot

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  check-commiter:
    runs-on: ubuntu-latest
    outputs:
      should_continue: ${{ steps.check_is_fms.outputs.result }}
    steps:
    - name: Check all commiter are FMs member
      id: check_is_fms
      uses: actions/github-script@v7
      with:
        script: |
          const commitLists = await github.rest.pulls.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
          });
          
          const isAllCommitFromFms = commitLists["data"].every((commit) => {
              // マージコミットの場合はスキップ
              if (commit["parents"] && commit["parents"].length > 1) {
                return true;
              }
              
              const commitAuthor = commit["commit"]["author"]["name"]
              const commitAuthorEmail = commit["commit"]["author"]["email"]
          
              return commitAuthorEmail.includes("@fullmarks.co.jp") 
          })
          
          return isAllCommitFromFms
    
  pr_status_check:
    needs: check-commiter
    if: ${{ fromJSON(needs.check-commiter.outputs.should_continue) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
      - name: Get changed directories
        id: changed-directories
        run: |
          CHANGED_DIRECTORIES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr '\n' ',' | sed 's/,$/' | xargs -d, -I {} dirname {} | sort -u | tr '\n' ',')
          echo "::set-output name=directories::$CHANGED_DIRECTORIES"
      - name: Get PR body
        id: pr_body
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
            });
            return body.data.body;
      - name: Add checklists
        id: add_checklists
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -j '.setting[] | select(.path | IN([${{ steps.changed-directories.outputs.directories }}])) | {path: .path, checklists: .checklists}' setting/github_action_setting.yaml
      - name: Update PR body
        if: steps.add_checklists.outputs.result != '[]'
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            const checklists = JSON.parse('${{ steps.add_checklists.outputs.result }}');
            let result = "";
            checklists.forEach(item => {
              result += `\n## レビュワーは以下の項目を確認してください\n`;
              item.checklists.forEach(checklist => {
                result += `${checklist}\n`;
              });
            });
            const originalBody = '${{ steps.pr_body.outputs.result }}';
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              body: `${originalBody}\n${result}`,
            });

      - name: Update status check based on checkboxes
        if: github.event.action
        id: update_check
        uses: actions/github-script@v7
        with:
          script: |
            const prBody = context.payload.pull_request.body || ''
            
            const allCheckboxesChecked = !prBody.includes('- [ ]')
  
            if (allCheckboxesChecked) {
              return
            } else {
              throw new Error('確認されていない項目があります。')
            }
