name: Pull request audit bot

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  check-commiter:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    outputs:
      should_continue: ${{ steps.check_is_fms.outputs.result }}
    steps:
    - name: Check all commiter are FMs member
      id: check_is_fms
      uses: actions/github-script@v7
      with:
        script: |
          const commitLists = await github.rest.pulls.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
          });
          
          const isAllCommitFromFms = commitLists["data"].every((commit) => {
              const commitAuthor = commit["commit"]["author"]["name"]
              const commitAuthorEmail = commit["commit"]["author"]["email"]
          
              return commitAuthorEmail.includes("@fullmarks.co.jp") 
          })
          
          return isAllCommitFromFms
    
  pr_status_check:
    needs: check-commiter
    if: ${{ fromJSON(needs.check-commiter.outputs.should_continue) }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Fetch all history
        run: git fetch --prune --unshallow

      - name: Check diff for specific files
        id: check_diff
        run: |
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA)
          echo "Changed files: $CHANGED_FILES"
          echo "has_specific_files=$(echo "$CHANGED_FILES" | grep -q 'target_directory' && echo true || echo false)" >> $GITHUB_OUTPUT
          echo

      - name: Add checkboxes to PR description
        if: steps.check_diff.outputs.has_specific_files == 'true' && github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          script: |
            const body = [
              context.payload.pull_request.body,
              '### 以下の項目を確認してください',
              '- [ ] Task 1', 
              '- [ ] Task 2',
            ].join('\n')
            
            github.rest.pulls.update({
              pull_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body,
            })
            
            throw new Error('確認されていない項目があります。')

      - name: Update status check based on checkboxes
        if: github.event.action
        id: update_check
        uses: actions/github-script@v7
        with:
          script: |
            const prBody = context.payload.pull_request.body || ''
            
            const allCheckboxesChecked = !prBody.includes('- [ ]')
  
            if (allCheckboxesChecked) {
              return
            } else {
              throw new Error('確認されていない項目があります。')
            }
            
