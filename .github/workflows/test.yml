name: Pull request audit bot

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  check-commiter:
    runs-on: ubuntu-latest
    outputs:
      should_continue: ${{ steps.check_is_fms.outputs.result }}
    steps:
    - name: Check all commiter are FMs member
      id: check_is_fms
      uses: actions/github-script@v7
      with:
        script: |
          const commitLists = await github.rest.pulls.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
          });
          
          const isAllCommitFromFms = commitLists["data"].every((commit) => {
              const commitAuthor = commit["commit"]["author"]["name"]
              const commitAuthorEmail = commit["commit"]["author"]["email"]
          
              return commitAuthorEmail.includes("@fullmarks.co.jp") 
          })
          
          return isAllCommitFromFms
    
  pr_status_check:
    needs: check-commiter
    if: ${{ fromJSON(needs.check-commiter.outputs.should_continue) }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Fetch all history
        run: git fetch --prune --unshallow

      - name: Check diff for specific files
        id: check_diff
        run: |
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA)
          echo "Changed files: $CHANGED_FILES"

          # 差分があるディレクトリを抽出して環境変数に格納
          CHANGED_DIRECTORIES=$(echo "$CHANGED_FILES" | grep -o '^[^/]*' | sort -u | tr '\n' ',' | sed 's/,$//')
          echo "Changed directories: $CHANGED_DIRECTORIES"
          
          # 環境変数にセット
          echo "changed_directories=$CHANGED_DIRECTORIES" >> $GITHUB_ENV

      - name: Add checkboxes to PR description
        if: github.event.action == 'opened'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.event.pull_request.html_url }}
        run: |
          sudo apt-get update && sudo apt-get install -y yq
          
          # YAML ファイルのパス
          YAML_FILE="setting/github_action_setting.yaml"

          # 変更されたディレクトリ（カンマ区切り）
          CHANGED_DIRECTORIES="${changed_directories}"

          # プルリクエストの本文を取得
          PR_BODY=$(gh pr view ${{ github.event.pull_request.number }} --json body -q .body)

          TITLE="### 以下の項目を確認してください"

          # チェックリストの追加
          add_checklists() {
            local directory="$1"
            local checklists
            local lenght

            lenght=$(yq ".setting[] | select(.path == \"$directory\") | .checklists | length" "$YAML_FILE")

            if [[ "$lenght" -gt 0 ]]; then
              checklists=()
              for i in $(seq 0 $((lenght - 1))); do
                checklists+=("$(yq -r ".setting[] | select(.path == \"$directory\") | .checklists[$i]" "$YAML_FILE")")
              done
              printf "%s\n" " ${checklists[@]}"
            fi

            exit 0
          }

          RESULT=()

          # 変更されたディレクトリごとにチェックリストを追加
          IFS=',' read -r -a dirs <<< "$CHANGED_DIRECTORIES"
          for dir in "${dirs[@]}"; do
            checklist=$(add_checklists "$dir")
            if [[ -n "$checklist" ]]; then
              RESULT+=("$checklist")
            fi
          done

          # 結果が空でない場合のみ更新
          if [[ ${#RESULT[@]} -gt 0 ]]; then
            # GitHub CLI を使用してプルリクエストの本文を更新
            gh pr edit ${{ github.event.pull_request.number }} --body "$(printf "%s\n%s\n%s" "${PR_BODY}" "${TITLE}" "$(printf "%s" "${RESULT[@]}")")"
            exit 1
          fi

      - name: Update status check based on checkboxes
        if: github.event.action
        id: update_check
        uses: actions/github-script@v7
        with:
          script: |
            const prBody = context.payload.pull_request.body || ''
            
            const allCheckboxesChecked = !prBody.includes('- [ ]')
  
            if (allCheckboxesChecked) {
              return
            } else {
              throw new Error('確認されていない項目があります。')
            }
